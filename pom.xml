<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>com.aksh</groupId>
	<artifactId>MarketLog</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<packaging>jar</packaging>

	<name>MarketLog</name>
	<description>Demo project for Spring Boot</description>

	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>1.5.1.RELEASE</version>
		<relativePath /> <!-- lookup parent from repository -->
	</parent>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<java.version>1.8</java.version>
	</properties>

	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-actuator</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-rest</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-jdbc</artifactId>
		</dependency>
		<dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-devtools</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-jdbc</artifactId>
			<version>4.3.4.RELEASE</version>
		</dependency>
		<dependency>
			<groupId>commons-dbcp</groupId>
			<artifactId>commons-dbcp</artifactId>
		</dependency>

		<dependency>
			<groupId>commons-lang</groupId>
			<artifactId>commons-lang</artifactId>
			<version>2.6</version>
		</dependency>
		<dependency>
			<groupId>org.hsqldb</groupId>
			<artifactId>hsqldb</artifactId>
		</dependency>
	</dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-failsafe-plugin</artifactId>
				<executions>
					<execution>
						<goals>
							<goal>integration-test</goal>
							<goal>verify</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>

	<profiles>
		<profile>
			<id>docker</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-failsafe-plugin</artifactId>
						<configuration>
							<systemPropertyVariables>
								<docker.host.address>${docker.host.address}</docker.host.address>
								<integration.env>docker</integration.env>
							</systemPropertyVariables>
						</configuration>
					</plugin>
					<plugin>
						<groupId>io.fabric8</groupId>
						<artifactId>docker-maven-plugin</artifactId>
						<version>0.19.0</version>
						<configuration>
							<machine>
								<name>akshaya1</name>
							</machine>
							<images>
								<image>
									<name>marketlog</name>
									<build>
										<from>java:8</from>
										<assembly>
											<descriptorRef>artifact</descriptorRef>
										</assembly>
										<ports>
											<port>8080</port>
										</ports>
										<cmd>java -jar maven/${project.name}-${project.version}.jar</cmd>
									</build>
									<run>
										<env>
											<SPRING_PROFILES_ACTIVE>docker</SPRING_PROFILES_ACTIVE>
										</env>
										<ports>
											<port>8080:8080</port>
										</ports>
										<links>
											<link>marketlog_d:db</link>
										</links>
										<wait>
											<time>30000</time>
											<url>http://${docker.host.address}:8080/analytics/ping</url>
										</wait>
									</run>
								</image>
								<image>
									<alias>marketlog_d</alias>
									<name>mysql:5.5</name>
									<run>
										<env>
											<MYSQL_ROOT_PASSWORD>aks123</MYSQL_ROOT_PASSWORD>
											<MYSQL_DATABASE>marketlogd</MYSQL_DATABASE>
										</env>
										<volumes>
											<bind>
												<volume>/home/akshaya/mysql:/var/lib/mysql</volume>
											</bind>
										</volumes>
										<wait>
											<time>20000</time>
										</wait>
									</run>
								</image>

							</images>
						</configuration>
						<executions>
							<execution>
								<id>docker:build</id>
								<phase>package</phase>
								<goals>
									<goal>build</goal>
								</goals>
							</execution>
							<execution>
								<id>docker:start</id>
								<phase>install</phase>
								<goals>
									<goal>run</goal>
								</goals>
							</execution>
							<execution>
								<id>docker:stop</id>
								<phase>install</phase>
								<goals>
									<goal>stop</goal>
								</goals>
							</execution>
							<execution>
								<id>start</id>
								<phase>pre-integration-test</phase>
								<goals>
									<!-- "build" should be used to create the images with the artifact -->
									<goal>build</goal>
									<goal>start</goal>
								</goals>
							</execution>
							<execution>
								<id>stop</id>
								<phase>post-integration-test</phase>
								<goals>
									<goal>stop</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>vm</id>
			<activation>
				<activeByDefault>true</activeByDefault>
			</activation>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-failsafe-plugin</artifactId>
						<configuration>
							<systemPropertyVariables>
								<integration.env>vm</integration.env>
							</systemPropertyVariables>
						</configuration>
					</plugin>
					<plugin>
						<groupId>org.springframework.boot</groupId>
						<artifactId>spring-boot-maven-plugin</artifactId>
						<configuration>
							<jvmArguments>-Dspring.profiles.active=vm</jvmArguments>
						</configuration>
						<executions>
							<execution>
								<id>pre-integration-test</id>
								<goals>
									<goal>start</goal>
								</goals>
							</execution>
							<execution>
								<id>post-integration-test</id>
								<goals>
									<goal>stop</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>heroku</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-failsafe-plugin</artifactId>
						<configuration>
							<systemPropertyVariables>
								<integration.env>heroku</integration.env>
							</systemPropertyVariables>
						</configuration>
					</plugin>
					<plugin>
						<groupId>com.heroku.sdk</groupId>
						<artifactId>heroku-maven-plugin</artifactId>
						<version>1.1.3</version>
						<configuration>
							<appName>${heroku.appName}</appName>
							<processTypes>
								<web>java $JAVA_OPTS -Dserver.port=$PORT -jar target/${project.name}-${project.version}.jar</web>
							</processTypes>
							<configVars>
								<SPRING_PROFILES_ACTIVE>heroku</SPRING_PROFILES_ACTIVE>
							</configVars>
						</configuration>
						<executions>
							<execution>
								<id>pre-integration</id>
								<phase>pre-integration-test</phase>
								<goals>
									<goal>deploy</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
		
	</profiles>
	

</project>
